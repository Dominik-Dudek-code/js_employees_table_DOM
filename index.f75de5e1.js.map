{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\n// select all table pieces\nconst table = document.querySelector('table');\nconst rows = document.querySelector('tbody');\nconst head = document.querySelector('thead');\n\n// prevent selecting text\nhead.style.userSelect = 'none';\nrows.style.userSelect = 'none';\n\n// appending ID column;\nlet lastId = 0;\n\nfor (let i = 0; i < table.rows.length; i++) {\n  const row = table.rows[i];\n  const idCell = row.insertCell(0);\n\n  lastId = table.rows.length - 1;\n\n  if (i === 0 || i === table.rows.length - 1) {\n    const title = document.createElement('th');\n\n    idCell.replaceWith(title);\n    title.textContent = 'ID';\n  }\n\n  if (i !== table.rows.length - 1 && i !== 0) {\n    idCell.textContent = i;\n  }\n}\n\n// sorting parameters\nconst sortingParameters = {\n  lastClickedCell: null,\n  sortOrder: 'asc',\n\n  get sortingName() {\n    return this.lastClickedCell;\n  },\n\n  set sortingName(value) {\n    return (this.lastClickedCell = value.textContent.toLowerCase());\n  },\n};\n\n// column types\nconst columnIndexMap = {};\n\nhead.querySelectorAll('th').forEach((cell, index) => {\n  const columnName = cell.textContent.trim().toLowerCase();\n\n  columnIndexMap[columnName] = index;\n});\n\n// event for sorting\ntable.addEventListener('click', (e) => {\n  if (e.target.nodeName !== 'TH' || e.target.closest('thead') === null) {\n    return;\n  }\n\n  const sortBy = e.target.textContent.toLowerCase();\n\n  if (sortBy === sortingParameters.lastClickedCell) {\n    sortingParameters.sortOrder =\n      sortingParameters.sortOrder === 'asc' ? 'desc' : 'asc';\n  } else {\n    sortingParameters.sortOrder = 'asc';\n  }\n\n  sortingTable(rows, sortBy, sortingParameters.sortOrder);\n\n  sortingParameters.sortingName = e.target;\n});\n\n// function for sorting\nfunction sortingTable(item, sortBy, order) {\n  const columnIndex = columnIndexMap[sortBy];\n  const sortedArray = [...item.rows].sort((rowA, rowB) => {\n    const cellA = rowA.cells[columnIndex].textContent;\n    const cellB = rowB.cells[columnIndex].textContent;\n\n    let comparison;\n\n    switch (sortBy) {\n      case 'age':\n        comparison = cellA - cellB;\n        break;\n\n      case 'id':\n        comparison = cellA - cellB;\n        break;\n\n      case 'salary':\n        comparison = formattedSalary(cellA) - formattedSalary(cellB);\n        break;\n\n      default:\n        comparison = cellA.localeCompare(cellB);\n        break;\n    }\n\n    return order === 'asc' ? comparison : -comparison;\n  });\n\n  item.replaceChildren(...sortedArray);\n}\n\n// function for replacing salary\nfunction formattedSalary(salary) {\n  return Number(salary.replace(/[,$]/g, ''));\n}\n\n// event for selecting\nlet currentSelected = null;\n\ndocument.addEventListener('click', (e) => {\n  const row = e.target.closest('tr');\n\n  if (e.target.closest('.modal')) {\n    return;\n  }\n\n  if (!row || row.parentElement.tagName !== 'TBODY') {\n    removeSelect();\n\n    return;\n  }\n\n  if (currentSelected !== row) {\n    removeSelect();\n    currentSelected = row;\n    currentSelected.classList.add('active');\n\n    const deleteIcon = document.createElement('span');\n\n    deleteIcon.textContent = '✖️';\n    deleteIcon.className = 'delete-button';\n\n    deleteIcon.addEventListener('click', (evnt) => {\n      evnt.stopPropagation();\n\n      const modal = document.querySelector('.modal');\n\n      modal.classList.remove('hidden');\n\n      modal.addEventListener(\n        'click',\n        (answer) => {\n          if (answer.target.textContent === 'Yes') {\n            answer.stopPropagation();\n            modal.classList.add('hidden');\n\n            deleteIcon.style.zIndex = '-1';\n            deleteIcon.classList.remove('active');\n\n            setTimeout(() => {\n              row.remove();\n              currentSelected = null;\n            }, 200);\n\n            setTimeout(() => {\n              createNotification('success', 'Succesfully deleted employee!');\n            }, 200);\n          }\n\n          if (answer.target.textContent === 'No') {\n            modal.classList.add('hidden');\n          }\n        },\n        { once: true },\n      );\n    });\n\n    row.appendChild(deleteIcon);\n\n    setTimeout(() => deleteIcon.classList.add('active'), 0);\n\n    setTimeout(() => {\n      if (currentSelected === row) {\n        deleteIcon.style.zIndex = '1';\n      }\n    }, 250);\n  }\n});\n\n// function removing selected\nfunction removeSelect() {\n  if (currentSelected) {\n    const deleteIcon = currentSelected.querySelector('.delete-button');\n\n    if (deleteIcon) {\n      deleteIcon.classList.remove('active');\n      deleteIcon.style.zIndex = '-1';\n      setTimeout(() => deleteIcon.remove(), 200);\n\n      currentSelected.classList.remove('active');\n      currentSelected = null;\n    }\n  }\n}\n\n// creating form\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\ndocument.body.appendChild(form);\n\n// select options\nconst availableOffices = [\n  `Tokyo`,\n  `Singapore`,\n  `London`,\n  `New York`,\n  `Edinburgh`,\n  `San Francisco`,\n];\n\n// function for creating form\nfunction createForm() {\n  for (const fieldName in columnIndexMap) {\n    const fieldType = getFieldType(fieldName);\n\n    if (fieldName === 'id') {\n      continue;\n    }\n\n    if (fieldType === 'select') {\n      createFormSelect(fieldName, availableOffices);\n      continue;\n    }\n\n    createFormInput(fieldName, fieldType);\n  }\n}\n\ncreateForm();\n\n// getting form type\nfunction getFieldType(field) {\n  if (field === 'age' || field === 'salary') {\n    return 'number';\n  }\n\n  if (field === 'office') {\n    return 'select';\n  }\n\n  return 'text';\n}\n\n// function for creating select\nfunction createFormSelect(inputName, offices) {\n  const select = document.createElement('select');\n  const label = document.createElement('label');\n\n  label.textContent = createFirstBigLetter(inputName) + ':';\n\n  select.name = inputName;\n  select.dataset.qa = inputName;\n\n  offices.forEach((office) => {\n    const option = document.createElement('option');\n\n    option.value = office;\n    option.textContent = office;\n\n    select.appendChild(option);\n  });\n\n  label.appendChild(select);\n  form.appendChild(label);\n}\n\n// function for creating inputs\nfunction createFormInput(inputName, type) {\n  const label = document.createElement('label');\n  const input = document.createElement('input');\n\n  label.textContent = createFirstBigLetter(inputName) + ':';\n\n  input.type = type;\n  input.name = inputName;\n  input.dataset.qa = inputName;\n\n  label.appendChild(input);\n  form.appendChild(label);\n}\n\n// function for creating big letters\nfunction createFirstBigLetter(input) {\n  return input\n    .split(' ')\n    .map((word) => {\n      return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n    })\n    .join(' ');\n}\n\n// creating button\nconst button = document.createElement('button');\n\nbutton.type = 'submit';\nbutton.textContent = 'Save to table';\n\nform.appendChild(button);\n\n// creating notifications\nfunction createNotification(type, message) {\n  const error = document.querySelector('.notification');\n\n  if (error) {\n    document.body.removeChild(error);\n  }\n\n  const notification = document.createElement('div');\n  const notificationTitle = document.createElement('h2');\n  const notificationDescription = document.createElement('p');\n\n  notification.dataset.qa = 'notification';\n  notification.classList.add('notification');\n\n  notification.appendChild(notificationTitle);\n  notification.appendChild(notificationDescription);\n\n  notificationDescription.textContent = message;\n\n  notificationTitle.textContent = `${createFirstBigLetter(type)} message:`;\n  notification.classList.add(type);\n\n  document.body.appendChild(notification);\n\n  setTimeout(() => {\n    if (document.body.contains(notification)) {\n      document.body.removeChild(notification);\n    }\n  }, 5000);\n}\n\n// formatting error\nfunction formatString(input) {\n  const items = input.split(' ');\n\n  if (items.length === 1) {\n    return `${items[0]} is`;\n  }\n\n  if (items.length === 2) {\n    return `${items[0]} and ${items[1]} are`;\n  }\n\n  const allButLast = items.slice(0, -1).join(', ');\n  const last = items[items.length - 1];\n\n  return `${allButLast} and ${last} are`;\n}\n\n// creating errors\nlet currentError;\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const formData = new FormData(form);\n\n  let isEmptyField = false;\n  let whichEmptyField = '';\n\n  for (const [key, value] of formData) {\n    if (!value.trim()) {\n      isEmptyField = true;\n      whichEmptyField += `${key} `;\n    }\n  }\n\n  if (isEmptyField) {\n    const emptyFields = formatString(whichEmptyField.trim());\n\n    createNotification(\n      'error',\n      `Failed because ${emptyFields} empty, please enter correct value to inputs!`,\n    );\n\n    return;\n  }\n\n  for (const [key, value] of formData) {\n    currentError = validate(key, value);\n\n    if (currentError) {\n      return;\n    }\n  }\n\n  createNotification('success', 'New employee has been added to the table!');\n\n  // creating employee object for adding row\n  const employeeData = {};\n\n  for (const field in columnIndexMap) {\n    employeeData[field] = formData.get(field);\n  }\n\n  appendNewEmployee(employeeData);\n\n  if (sortingParameters.lastClickedCell) {\n    sortingTable(\n      rows,\n      sortingParameters.lastClickedCell,\n      sortingParameters.sortOrder,\n    );\n  }\n\n  form.reset();\n});\n\n// function for validation\nfunction validate(key, value) {\n  if (key === 'name' || key === 'position') {\n    if (value.length < 4) {\n      createNotification(\n        'error',\n        `${createFirstBigLetter(key)} should be at least 4 letters long!`,\n      );\n\n      return true;\n    }\n\n    if (value.length > 40) {\n      createNotification(\n        'error',\n        `${createFirstBigLetter(key)} can't be that long!`,\n      );\n\n      return true;\n    }\n\n    if (!/^[a-zA-Z]+(?: [a-zA-Z]+)*$/.test(key)) {\n      createNotification(\n        'error',\n        `${createFirstBigLetter(key)} should contain letters, with only one space between words!`,\n      );\n\n      return true;\n    }\n  }\n\n  if (key === 'age') {\n    if (isNaN(Number(value))) {\n      createNotification('error', 'Age should contain only numbers!');\n\n      return true;\n    }\n\n    if (Number(value) < 18 || Number(value) > 90) {\n      createNotification('error', 'Age should be between 18 and 90 years!');\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// appending new employee to table\nfunction appendNewEmployee(employee) {\n  const newRow = rows.insertRow();\n\n  Object.entries(employee).forEach(([keyName, data]) => {\n    const cell = newRow.insertCell();\n\n    if (keyName === 'id') {\n      cell.textContent = lastId;\n      lastId++;\n    }\n\n    if (typeof data === 'string') {\n      cell.textContent = createFirstBigLetter(data.trim());\n    }\n\n    if (keyName === 'salary') {\n      const formatted = makeSalary(data);\n\n      cell.textContent = formatted;\n    }\n  });\n}\n\n// function for making salary\nfunction makeSalary(value) {\n  return `$${Number(value).toLocaleString('en-US')}`;\n}\n\n// event for editing cells\nlet isEditing = false;\n\nrows.addEventListener('dblclick', (e) => {\n  const cell = e.target.closest('td');\n\n  if (!cell || cell.parentElement !== currentSelected || isEditing) {\n    return;\n  }\n\n  const cellIndex = cell.cellIndex;\n  let headerCell;\n\n  for (const key in columnIndexMap) {\n    if (key === 'id') {\n      headerCell = columnIndexMap[key];\n    }\n  }\n\n  if (cellIndex === headerCell) {\n    return;\n  }\n\n  const currentText = cell.textContent;\n\n  cell.textContent = '';\n\n  const computedStyle = window.getComputedStyle(cell);\n  const width = computedStyle.width;\n  const height = computedStyle.height;\n\n  let cellName = cell.cellIndex;\n\n  for (const key in columnIndexMap) {\n    if (columnIndexMap[key] === cellName) {\n      cellName = key;\n      break;\n    }\n  }\n\n  const editInput = makeEditInput(cellName, getFieldType(cellName));\n\n  editInput.className = 'cell-input';\n  editInput.style.height = height;\n  editInput.style.width = width;\n  editInput.value = currentText;\n\n  if (cellName === 'salary') {\n    editInput.value = currentText.slice(1).split(',').join('');\n  }\n\n  cell.appendChild(editInput);\n  isEditing = true;\n  editInput.focus();\n\n  editInput.addEventListener('blur', () => {\n    isEditing = false;\n    cell.innerHTML = '';\n\n    const newValue = editInput.value;\n\n    if (newValue.length <= 0) {\n      cell.textContent = currentText;\n      createNotification('warning', 'Failed, no data passed.');\n\n      return;\n    }\n\n    const validateResult = validate(cellName, newValue);\n\n    if (validateResult) {\n      cell.textContent =\n        cellName === 'salary' ? makeSalary(newValue) : currentText;\n\n      return;\n    }\n\n    if (cellName === 'salary') {\n      cell.textContent = makeSalary(newValue);\n\n      return;\n    }\n\n    if (getFieldType(cellName) === 'text') {\n      cell.textContent = createFirstBigLetter(editInput.value);\n\n      return;\n    }\n\n    cell.textContent = editInput.value;\n  });\n\n  editInput.addEventListener('keydown', (evnt) => {\n    if (evnt.key === 'Enter') {\n      editInput.blur();\n    }\n  });\n});\n\n// function for making edit inputs\nfunction makeEditInput(inputName, type) {\n  const typeCreated = type === 'select' ? 'select' : 'input';\n\n  const formCopy = document.querySelector(\n    `${typeCreated}[name=\"${inputName}\"]`,\n  );\n\n  const editCell = formCopy.cloneNode(true);\n\n  return editCell;\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}